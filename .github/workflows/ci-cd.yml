name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  IMAGE_NAME: spellbuddy
  # Add placeholder API key for build
  OPENAI_API_KEY: sk-placeholder-key-for-build-process
  OPENAI_MODEL: gpt-4o-mini

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && !startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      # Skip linting for now
      # - name: Lint
      #   run: npm run lint
      
      - name: Create .env.local file
        run: |
          echo "OPENAI_API_KEY=sk-placeholder-key-for-build-process" > .env.local
          echo "OPENAI_MODEL=gpt-4o-mini" >> .env.local
          echo "DATABASE_URL=file:./spellbuddy.db" >> .env.local
          echo "JWT_SECRET=placeholder-jwt-secret-for-build" >> .env.local
      
      - name: Build
        run: npm run build
        env:
          OPENAI_API_KEY: sk-placeholder-key-for-build-process
          OPENAI_MODEL: gpt-4o-mini
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=short
            type=semver,pattern={{version}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create .env.local file
        run: |
          echo "OPENAI_API_KEY=sk-placeholder-key-for-build-process" > .env.local
          echo "OPENAI_MODEL=gpt-4o-mini" >> .env.local
          echo "DATABASE_URL=file:./spellbuddy.db" >> .env.local
          echo "JWT_SECRET=placeholder-jwt-secret-for-build" >> .env.local
      
      - name: Build
        run: npm run build
        env:
          OPENAI_API_KEY: sk-placeholder-key-for-build-process
          OPENAI_MODEL: gpt-4o-mini
      
      # Add tests when available
      # - name: Run tests
      #   run: npm test 